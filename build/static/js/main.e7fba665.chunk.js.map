{"version":3,"sources":["pages/404.jpg","pages/CreatePostTest_2.js","pages/Pagination.js","pages/EditBox.js","pages/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["validateEmployee","empData","errors","special_charecter","fname","length","match","split","some","c","includes","lname","gender","todayDate","Date","dateOfBirth","dob","diffDateInDays","Math","ceil","abs","hireDate","foundationDate","diffDOBAndHireDateInDays","validateEmpEmpty","stateFname","stateLname","stateDOB","stateGender","stateHireDate","CreatePost","closeSpan","useState","errorMsg","setErrorMsg","setStateFname","setStateLname","setStateDOB","setStateGender","setStateHireDate","image","setImage","imageMsg","setImageMsg","profileImage","setProfileImage","imagePathDB","setImagePathDB","formik","useFormik","initialValues","validate","onSubmit","values","submitPost","resetForm","stateValidate","Axios","post","picturepath","then","data","console","log","alert","Option","Select","className","alt","src","errorImage","labelCol","span","layout","handleSubmit","Item","label","name","rules","required","message","type","placeholder","id","onChange","handleChange","value","onSelect","handleBlur","onBlur","e","style","touched","border","color","fontSize","onFocus","currentTarget","focus","defaultValue","setFieldValue","onClick","disabled","hidden","fontStyle","title","target","files","formData","FormData","append","path","path_print","process","uploadPhoto","paddingTop","isValid","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","push","map","number","hiredate","diffDOBAndhiredateInDays","EditBox","record","loading","email","enableReinitialize","concat","toLowerCase","floor","random","toString","empid","updatePost","cursor","Search","Input","MainPage","postList","setPostList","isOpen","viewRecord","get","useEffect","editRecordData","setEditRecordData","setLoading","editRecord","document","getElementById","display","viewIndividualRecord","searchItem","setSearchItem","CreatePostButton","setCreatePostButton","changeButton","innerHTML","imageEmpIDDB","setImageEmpIDDB","currentPage","setCurrentPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","margin","minHeight","float","width","zIndex","CreatePostTest_2","toDisable","toDisable_1","modalImg","toEnable","toEnable_1","updatePic","icon","UploadOutlined","padding","fontWeight","filter","val","key","captionText","enlargeImage","tabIndex","check","getPropertyValue","setProperty","toggle","window","confirm","danger","pageNumber","App","href","exact","render","props","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"0XAAe,G,OAAA,IAA0B,iC,kFCUnCA,EAAmB,SAACC,GACxB,IAAMC,EAAS,GACXC,EAAiB,0CAGI,MAArBF,EAAQG,MAAM,GAAYF,EAAOE,MAAQ,4BACpCH,EAAQG,MAAMC,OAAS,GAC9BH,EAAOE,MAAQ,sCACuB,MAA/BH,EAAQG,MAAME,MAAM,SAGpBH,EAAkBI,MAAM,IAAIC,MAAK,SAACC,GAAD,OAAOR,EAAQG,MAAMM,SAASD,SAFtEP,EAAOE,MAAQ,6BAMQ,MAArBH,EAAQU,MAAM,GAAYT,EAAOS,MAAQ,4BACpCV,EAAQU,MAAMN,OAAS,GAC9BH,EAAOS,MAAQ,sCACuB,MAA/BV,EAAQU,MAAML,MAAM,SAEpBH,EAAkBI,MAAM,IAAIC,MAAK,SAACC,GAAD,OAAOR,EAAQU,MAAMD,SAASD,SADtEP,EAAOS,MAAQ,6BAKM,kBAAnBV,EAAQW,SACVV,EAAOU,OAAS,wBAGlB,IAAMC,EAAY,IAAIC,KAChBC,EAAc,IAAID,KAAKb,EAAQe,KAC/BC,EAAiBC,KAAKC,KAC1BD,KAAKE,IAAIP,EAAYE,GAArB,QAEEF,GAAaE,GAERE,GAAkB,OAAaF,EAAcF,GAE7CI,GAAkB,QAHzBf,EAAOc,IAAM,sCAOf,IAAMK,EAAW,IAAIP,KAAKb,EAAQoB,UAC5BC,EAAiB,IAAIR,KAAK,KAAM,EAAG,GAEnCS,EAA2BL,KAAKC,KACpCD,KAAKE,IAAIC,EAAWN,GAApB,OAWF,OATIM,EAAWN,GAENM,EAAWR,GAEXQ,EAAWC,EAHlBpB,EAAOmB,SAAW,iCAKXE,EAA2B,OAClCrB,EAAOmB,SAAW,mCAEbnB,GAGHsB,EAAmB,SACvBC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAM3B,EAAS,GAOf,OALIuB,IAAYvB,EAAOE,MAAQ,aAC3BsB,IAAYxB,EAAOS,MAAQ,aAC3BiB,IAAa1B,EAAOU,OAAS,aAC7Be,IAAUzB,EAAOc,IAAM,aACvBa,IAAe3B,EAAOmB,SAAW,aAC9BnB,GA+dM4B,MA5df,YAAoC,IAAD,EAAbC,EAAa,EAAbA,UAGpB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,CAAE5B,OAAO,IAAtD,mBAAOqB,EAAP,KAAmBU,EAAnB,KACA,EAAoCH,mBAAS,CAAErB,OAAO,IAAtD,mBAAOe,EAAP,KAAmBU,EAAnB,KACA,EAAgCJ,mBAAS,CAAEhB,KAAK,IAAhD,mBAAOW,EAAP,KAAiBU,EAAjB,KACA,EAAsCL,mBAAS,CAAEpB,QAAQ,IAAzD,mBAAOgB,EAAP,KAAoBU,EAApB,KACA,EAA0CN,mBAAS,CAAEX,UAAU,IAA/D,mBAAOQ,EAAP,KAAsBU,EAAtB,KACA,EAA0BP,mBACxB,wIADF,mBAAOQ,EAAP,KAAcC,EAAd,KAGA,EAAgCT,mBAAS,IAAzC,mBAAOU,EAAP,KAAiBC,EAAjB,KACA,EAAwCX,oBAAS,GAAjD,mBAAOY,EAAP,KAAqBC,EAArB,KACA,EAAsCb,mBAAS,IAA/C,mBAAOc,GAAP,KAAoBC,GAApB,KAUMC,GAASC,YAAU,CACvBC,cAAe,CACb9C,MAAO,GACPO,MAAO,GACPK,IAAK,GACLJ,OAAQ,GACRS,SAAU,IAEZ8B,SAAUnD,EAEVoD,SAAU,SAACC,GAETC,GAAWD,GACXL,GAAOO,YApBTV,GAAgB,GAChBJ,EACE,wIAEFE,EAAY,OAqBRa,GAAgB,CACpBL,SAAU3B,EACRC,EACAC,EACAC,EACAC,EACAC,IAIEyB,GAAa,SAACD,GAClBI,IAAMC,KAAK,mCAAoC,CAC7CtD,MAAOiD,EAAOjD,MACdO,MAAO0C,EAAO1C,MACdK,IAAKqC,EAAOrC,IACZJ,OAAQyC,EAAOzC,OACfS,SAAUgC,EAAOhC,SACjBsC,YAAab,KACZc,MAAK,SAACC,GAGPC,QAAQC,IAAIF,GACM,UAAdA,EAAKA,KACP3B,EAAY,OAEZ8B,MAAM,mCAmCRjC,GAAWiB,GAAOO,YAKtB,IAAQU,GAAWC,IAAXD,OAER,OADAH,QAAQC,IAAI,YAAaf,GAAOK,QAE9B,qBAAKc,UAAU,YAAf,SACE,qBAAKA,UAAU,oBAAf,SACgB,QAAblC,EACC,qBAAKkC,UAAU,QAAf,SACE,qBACEA,UAAU,aACVC,IAAI,qBACJC,IAAKC,MAIT,8BACE,eAAC,IAAD,CACEC,SAAU,CAAEC,KAAM,GAClBC,OAAO,aAEPrB,SAAUJ,GAAO0B,aAJnB,UAQE,eAAC,IAAKC,KAAN,CACEC,MAAM,aACNC,KAAK,QACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BANf,UAUE,cAAC,IAAD,CACEC,KAAK,OACLC,YAAY,OACZC,GAAG,QACHN,KAAK,QACLO,SAAUpC,GAAOqC,aACjBC,MAAOtC,GAAOK,OAAOjD,MACrBmF,SAAUvC,GAAOwC,WACjBC,OAAQ,SAACC,GACF1C,GAAOK,OAAOjD,MACd+B,EAAc,CAAE/B,OAAO,IADF+B,EAAc,CAAE/B,OAAO,KAInDuF,MACG3C,GAAO4C,QAAQxF,OAAS4C,GAAO9C,OAAOE,OACtCqB,EAAWrB,QAAU4C,GAAOK,OAAOjD,QAClC4C,GAAO4C,QAAQjF,OACfqC,GAAO4C,QAAQ5E,KACfgC,GAAO4C,QAAQhF,QACfoC,GAAO4C,QAAQvE,YACd2B,GAAOK,OAAOjD,MACb,CAAEyF,OAAQ,iBACV,OAGR,sBAAK1B,UAAU,WAAf,UACGnB,GAAO4C,QAAQxF,OAAS4C,GAAO9C,OAAOE,MACrC,sBAAMuF,MAAO,CAAEG,MAAO,MAAOC,SAAU,IAAvC,SACG/C,GAAO9C,OAAOE,QAEf,KACFqB,EAAWrB,QAAU4C,GAAOK,OAAOjD,QACnC4C,GAAO4C,QAAQjF,OACfqC,GAAO4C,QAAQ5E,KACfgC,GAAO4C,QAAQhF,QACfoC,GAAO4C,QAAQvE,YACd2B,GAAOK,OAAOjD,MACf,sBAAMuF,MAAO,CAAEG,MAAO,MAAOC,SAAU,IAAvC,SACGvC,GAAcL,SAAS/C,QAExB,WAKR,eAAC,IAAKuE,KAAN,CACEC,MAAM,YACNC,KAAK,QACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BANf,UAUE,cAAC,IAAD,CACEC,KAAK,OACLF,SAAS,WACTG,YAAY,OACZC,GAAG,QACHN,KAAK,QACLO,SAAUpC,GAAOqC,aACjBC,MAAOtC,GAAOK,OAAO1C,MACrB8E,OAAQ,SAACC,GACF1C,GAAOK,OAAO1C,MACdyB,EAAc,CAAEzB,OAAO,IADFyB,EAAc,CAAEzB,OAAO,KAGnD4E,SAAUvC,GAAOwC,WACjBG,MACG3C,GAAO4C,QAAQjF,OAASqC,GAAO9C,OAAOS,OACtCe,EAAWf,QAAUqC,GAAOK,OAAO1C,QAClCqC,GAAO4C,QAAQ5E,KACfgC,GAAO4C,QAAQhF,QACfoC,GAAO4C,QAAQvE,YACd2B,GAAOK,OAAO1C,MACb,CAAEkF,OAAQ,iBACV,OAGR,sBAAK1B,UAAU,WAAf,UACGnB,GAAO4C,QAAQjF,OAASqC,GAAO9C,OAAOS,MACrC,sBAAMgF,MAAO,CAAEG,MAAO,OAAtB,SAAgC9C,GAAO9C,OAAOS,QAC5C,KACFe,EAAWf,QAAUqC,GAAOK,OAAO1C,QACnCqC,GAAO4C,QAAQ5E,KACfgC,GAAO4C,QAAQhF,QACfoC,GAAO4C,QAAQvE,YACd2B,GAAOK,OAAO1C,MACf,sBACEgF,MAAO,CACLG,MAAO,MACPC,SAAU,IAHd,SAMGvC,GAAcL,SAASxC,QAExB,WAKR,eAAC,IAAKgE,KAAN,CACEC,MAAM,gBACNC,KAAK,MACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BANf,UAUE,cAAC,IAAD,CACEC,KAAK,OACLF,SAAS,WACTG,YAAY,aACZc,QAAS,SAACN,GACRA,EAAEO,cAAchB,KAAO,OACvBS,EAAEO,cAAcC,SAElBf,GAAG,MACHN,KAAK,MACLO,SAAUpC,GAAOqC,aACjBC,MAAOtC,GAAOK,OAAOrC,IACrByE,OAAQ,SAACC,GACF1C,GAAOK,OAAOrC,IACdqB,EAAY,CAAErB,KAAK,IADAqB,EAAY,CAAErB,KAAK,KAG7CuE,SAAUvC,GAAOwC,WACjBG,MACG3C,GAAO4C,QAAQ5E,KAAOgC,GAAO9C,OAAOc,KACpCW,EAASX,MAAQgC,GAAOK,OAAOrC,MAC9BgC,GAAO4C,QAAQhF,QAAUoC,GAAO4C,QAAQvE,YACvC2B,GAAOK,OAAOrC,IACb,CAAE6E,OAAQ,iBACV,OAGR,sBAAK1B,UAAU,WAAf,UACGnB,GAAO4C,QAAQ5E,KAAOgC,GAAO9C,OAAOc,IACnC,sBAAM2E,MAAO,CAAEG,MAAO,OAAtB,SAAgC9C,GAAO9C,OAAOc,MAC5C,KACFW,EAASX,MAAQgC,GAAOK,OAAOrC,MAC/BgC,GAAO4C,QAAQhF,QAAUoC,GAAO4C,QAAQvE,YACvC2B,GAAOK,OAAOrC,IACf,sBAAM2E,MAAO,CAAEG,MAAO,MAAOC,SAAU,IAAvC,SACGvC,GAAcL,SAASnC,MAExB,WAKR,eAAC,IAAK2D,KAAN,CACEC,MAAM,gBACNC,KAAK,SACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BANf,UAUE,eAAC,IAAD,CACEC,KAAK,OACLF,SAAS,WACToB,aAAa,GACbhB,GAAG,SACHN,KAAK,SACLO,SAAU,SAACE,GAAD,OAAWtC,GAAOoD,cAAc,SAAUd,IAEpDA,MAAOtC,GAAOK,OAAOiC,MACrBG,OAAQ,SAACC,GACF1C,GAAOK,OAAOzC,OACd0B,EAAe,CAAE1B,QAAQ,IADH0B,EAAe,CAAE1B,QAAQ,KAItDyF,QAAS,WACPrD,GAAO4C,QAAQhF,QAAS,GAE1B+E,MACG3C,GAAO4C,QAAQhF,QAAUoC,GAAO9C,OAAOU,QACvCgB,EAAYhB,SAAWoC,GAAOK,OAAOzC,QACrCoC,GAAO4C,QAAQvE,WAAa2B,GAAOK,OAAOzC,OACvC,CAAEiF,OAAQ,iBACV,KAtBR,UAyBE,eAAC,IAAO5B,OAAR,CAEEqB,MAAM,GACNgB,UAAU,EACVC,QAAQ,EACRZ,MAAO,CAAEG,MAAO,WALlB,UAOE,oBAAIH,MAAO,CAAEa,UAAW,SAAUV,MAAO,WAAzC,kBAEM,MARF,KAUN,cAAC7B,GAAD,CAAgBqB,MAAM,IAAtB,iBAAY,KAGZ,cAACrB,GAAD,CAAgBqB,MAAM,IAAtB,mBAAY,KAGZ,cAACrB,GAAD,CAAgBqB,MAAM,IAAtB,kBAAY,KAGZ,cAACrB,GAAD,CAAgBqB,MAAM,IAAtB,8BAAY,QAId,sBAAKnB,UAAU,WAAf,UACGnB,GAAO4C,QAAQhF,QAAUoC,GAAO9C,OAAOU,OACtC,sBAAM+E,MAAO,CAAEG,MAAO,OAAtB,SAAgC9C,GAAO9C,OAAOU,SAC5C,KACFgB,EAAYhB,SAAWoC,GAAOK,OAAOzC,QACtCoC,GAAO4C,QAAQvE,WAAa2B,GAAOK,OAAOzC,OACzC,sBAAM+E,MAAO,CAAEG,MAAO,MAAOC,SAAU,IAAvC,SACGvC,GAAcL,SAASvC,SAExB,WAKR,eAAC,IAAK+D,KAAN,CACEC,MAAM,YACNC,KAAK,WACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BANf,UAUE,cAAC,IAAD,CACEC,KAAK,OACLF,SAAS,WACTG,YAAY,aACZc,QAAS,SAACN,GACRA,EAAEO,cAAchB,KAAO,OACvBS,EAAEO,cAAcC,SAElBf,GAAG,WACHN,KAAK,WACLO,SAAUpC,GAAOqC,aACjBC,MAAOtC,GAAOK,OAAOhC,SACrBoE,OAAQ,SAACC,GACF1C,GAAOK,OAAOhC,SAEdkB,EAAiB,CAAElB,UAAU,IADhCkB,EAAiB,CAAElB,UAAU,KAGjCkE,SAAUvC,GAAOwC,WACjBG,MACG3C,GAAO4C,QAAQvE,UAAY2B,GAAO9C,OAAOmB,UACzCQ,EAAcR,WAAa2B,GAAOK,OAAOhC,SACtC,CAAEwE,OAAQ,iBACV,OAGR,sBAAK1B,UAAU,WAAf,UACGnB,GAAO4C,QAAQvE,UAAY2B,GAAO9C,OAAOmB,SACxC,sBAAMsE,MAAO,CAAEG,MAAO,OAAtB,SACG9C,GAAO9C,OAAOmB,WAEf,KACHQ,EAAcR,WAAa2B,GAAOK,OAAOhC,SACxC,sBAAMsE,MAAO,CAAEG,MAAO,MAAOC,SAAU,IAAvC,SACGvC,GAAcL,SAAS9B,WAExB,WAKR,eAAC,IAAKsD,KAAN,CACEC,MAAM,eACNC,KAAK,cACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BANf,UAUE,cAAC,IAAD,CACEC,KAAK,OACLJ,KAAK,UACL4B,MAAM,wBAENvB,YAAY,OACZE,SAAU,SAACM,IAvWP,SAACA,GACnB5B,QAAQC,IAAI2B,EAAEgB,OAAOC,MAAM,IAC3B,IAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,UAAWpB,EAAEgB,OAAOC,MAAM,IAE1CC,EAASE,OAAO,QAAS,yBACzBhD,QAAQC,IAAI6C,GAQZnD,IAAMC,KADM,kCACIkD,GAAUhD,MAAK,SAACC,GAC9B,GAAkB,UAAdA,EAAKA,KACPC,QAAQC,IAAIF,GACZ3B,EAAY,WACP,CAEL,IAAI6E,EAAOlD,EAAKA,KAAKkD,KAAKxG,MAAM,MAC5ByG,EAAa,IAAMD,EAAK,GAAX,IAAsBA,EAAK,GAC5CtE,EAASwE,GAAyBD,GAClCjE,GAAeiE,GACfrE,EAAYoE,EAAK,IACjBlE,GAAgB,OA+UJqE,CAAYxB,IACS,IAAjB9C,IAAwB8C,EAAI,SAIpC,sBAAMC,MAAO,CAAEwB,WAAY,MAAOrB,MAAO,SAAzC,SACGpD,OAGL,qBAAKyB,UAAU,aAAf,SACE,qBAAKC,IAAI,SAASC,IAAK7B,MAKzB,cAAC,IAAKmC,KAAN,UACE,cAAC,KAAD,GACEM,KAAK,UADP,qBAGO,WAHP,wBAIWjC,GAAO0B,cAJlB,0BAMK1B,GAAOoE,UACPpE,GAAOK,OAAOjD,QACd4C,GAAOK,OAAO1C,QACdqC,GAAOK,OAAOzC,SACdoC,GAAOK,OAAOrC,MACdgC,GAAOK,OAAOhC,WACduB,GAZL,mDC7fDyE,G,OAtBI,SAAC,GAGlB,IAH8D,IAA1CC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SACxCC,EAAc,GAEXC,EAAI,EAAGA,GAAKxG,KAAKC,KAAKoG,EAAaD,GAAeI,IACzDD,EAAYE,KAAKD,GAGnB,OACE,qBAAKvD,UAAU,gBAAf,SACE,qBAAKA,UAAU,qBAAf,SACGsD,EAAYG,KAAI,SAACC,GAAD,OACf,qBAAkB1D,UAAU,YAA5B,SACE,sBAAMkC,QAAS,kBAAMmB,EAASK,IAAS1D,UAAU,YAAjD,SACG0D,KAFKA,YCJd7H,G,OAAmB,SAACC,GACxB,IAAMC,EAAS,GACXC,EAAiB,0CAGC,KAAlBF,EAAQG,MAAcF,EAAOE,MAAQ,4BAChCH,EAAQG,MAAMC,OAAS,GAC9BH,EAAOE,MAAQ,sCACuB,MAA/BH,EAAQG,MAAME,MAAM,SAGpBH,EAAkBI,MAAM,IAAIC,MAAK,SAACC,GAAD,OAAOR,EAAQG,MAAMM,SAASD,SAFtEP,EAAOE,MAAQ,6BAMK,KAAlBH,EAAQU,MAAcT,EAAOS,MAAQ,4BAChCV,EAAQU,MAAMN,OAAS,GAC9BH,EAAOS,MAAQ,sCACuB,MAA/BV,EAAQU,MAAML,MAAM,SAEpBH,EAAkBI,MAAM,IAAIC,MAAK,SAACC,GAAD,OAAOR,EAAQU,MAAMD,SAASD,SADtEP,EAAOS,MAAQ,6BAKjB,IAAME,EAAY,IAAIC,KAChBC,EAAc,IAAID,KAAKb,EAAQe,KAC/BC,EAAiBC,KAAKC,KAC1BD,KAAKE,IAAIP,EAAYE,GAArB,QAEkB,KAAhBd,EAAQe,KACHH,GAAaE,GAEbE,GAAkB,OAAaF,EAAcF,GAE7CI,GAAkB,QALHf,EAAOc,IAAM,sCASrC,IAAM8G,EAAW,IAAIhH,KAAKb,EAAQ6H,UAC5BxG,EAAiB,IAAIR,KAAK,KAAM,EAAG,GAEnCiH,EAA2B7G,KAAKC,KACpCD,KAAKE,IAAI0G,EAAW/G,GAApB,OAYF,MAVyB,KAArBd,EAAQ6H,WACV5H,EAAO4H,SAAW,kCAChBA,EAAW/G,GAEN+G,EAAWjH,GAEXiH,EAAWxG,EAHlBpB,EAAO4H,SAAW,iCAKXC,EAA2B,OAClC7H,EAAO4H,SAAW,mCACb5H,IA6SM8H,EA1SC,SAAC,GAAyB,IAAD,EAAtBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAGzB,EAA4ClG,mBAAS,IAArD,6BAeA,IAuBMgB,EAASC,YAAU,CACvBC,cAAe,CACb9C,MAAO6H,EAAO7H,MACdO,MAAOsH,EAAOtH,MACdK,IAAKiH,EAAOjH,IACZJ,OAAQqH,EAAOrH,OACfkH,SAAUG,EAAOH,SACjBK,MAAOF,EAAOE,OAEhBC,oBAAoB,EACpBjF,SAAUnD,EACVoD,SAAU,SAACC,IAWb,SAAoBA,GACG,KAAjBA,EAAOjD,QAAciD,EAAOjD,MAAQ6H,EAAO7H,OAC1B,KAAjBiD,EAAO1C,QAAc0C,EAAO1C,MAAQsH,EAAOtH,OACzB,KAAlB0C,EAAOzC,SAAeyC,EAAOzC,OAASqH,EAAOrH,QAC9B,KAAfyC,EAAOrC,MAAYqC,EAAOrC,IAAMiH,EAAOjH,KACnB,KAApBqC,EAAOyE,WAAiBzE,EAAOyE,SAAWG,EAAOH,UAChC,KAAjBzE,EAAO8E,QAAc9E,EAAO8E,MAAQF,EAAOE,OAC1B,KAAjB9E,EAAOjD,QACTiD,EAAO8E,MAAQ,GAAGE,OAChBhF,EAAOjD,MAAMkI,cACb,IACApH,KAAKqH,MAAsB,IAAhBrH,KAAKsH,UAAgBC,WAChC,mBAGJpF,EAAOqF,MAAQT,EAAOS,MAEtB5E,QAAQC,IAAIV,GA9DK,SAACA,GAClBS,QAAQC,IAAIV,GACZI,IAAMC,KAAK,yCAA0C,CACnDtD,MAAOiD,EAAOjD,MACdO,MAAO0C,EAAO1C,MACdK,IAAKqC,EAAOrC,IACZJ,OAAQyC,EAAOzC,OACfkH,SAAUzE,EAAOyE,SACjBK,MAAO9E,EAAO8E,MACdO,MAAOrF,EAAOqF,QACb9E,MAAK,SAACC,GAGPC,QAAQC,IAAIF,GACM,UAAdA,EAAKA,KAEPG,MAAM,OAENA,MAAM,kCA6CV2E,CAAWtF,GA3BTC,CAAWD,MAKf,IAAK6E,EACH,OAAO,4CAyBTpE,QAAQC,IAAIf,EAAOK,QAEnBS,QAAQC,IAAIf,EAAOK,OAAOrC,KACtBiH,EAAOjH,KAAK8C,QAAQC,IAAIkE,EAAOjH,IAAIT,MAAM,KAAK,IAC9CyC,EAAOK,OAAOrC,KAAK8C,QAAQC,IAAIf,EAAOK,OAAOrC,IAAIT,MAAM,KAAK,IAChEuD,QAAQC,IAAIf,EAAOK,OAAOyE,UAC1B,IAAQ7D,EAAWC,IAAXD,OAER,OACE,qBAAKE,UAAU,kBAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,eAAC,IAAD,CACEf,SAAUJ,EAAO0B,aACjBH,SAAU,CAAEC,KAAM,GAElBC,OAAO,aAJT,UAQE,eAAC,IAAKE,KAAN,CACEC,MAAM,aACNC,KAAK,YACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BANf,UAUE,cAAC,IAAD,CACEC,KAAK,OACLJ,KAAK,QACLO,SAAUpC,EAAOqC,aACjBC,MAAOtC,EAAOK,OAAOjD,MAErBuF,MAAO3C,EAAO9C,OAAOE,MAAQ,CAAEyF,OAAQ,iBAAoB,OAG5D7C,EAAO9C,OAAOE,MACb,sBAAM+D,UAAU,gBAAhB,SAAiCnB,EAAO9C,OAAOE,QAC7C,QAGN,eAAC,IAAKuE,KAAN,CACEC,MAAM,YACNC,KAAK,WACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BANf,UAUE,cAAC,IAAD,CACEC,KAAK,OACLJ,KAAK,QACLO,SAAUpC,EAAOqC,aACjBC,MAAOtC,EAAOK,OAAO1C,QAGtBqC,EAAO9C,OAAOS,MACb,sBAAMwD,UAAU,gBAAhB,SAAiCnB,EAAO9C,OAAOS,QAC7C,QAGN,eAAC,IAAKgE,KAAN,CACEC,MAAM,gBACNC,KAAK,cACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BANf,UAUE,cAAC,IAAD,CAMEC,KAAK,OACLJ,KAAK,MACLO,SAAUpC,EAAOqC,aACjBC,MACEtC,EAAOK,OAAOrC,IACVgC,EAAOK,OAAOrC,IAAIT,MAAM,KAAK,GAC7ByC,EAAOK,OAAOrC,IAEpBsF,UAAU,IAEXtD,EAAO9C,OAAOc,IACb,sBAAMmD,UAAU,gBAAhB,SAAiCnB,EAAO9C,OAAOc,MAC7C,QAGN,cAAC,IAAK2D,KAAN,CACEC,MAAM,gBACNC,KAAK,SACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BANf,SAUE,eAAC,IAAD,CACEC,KAAK,OACLJ,KAAK,SACLO,SAAU,SAACE,GAAD,OAAWtC,EAAOoD,cAAc,SAAUd,IACpDA,MAAOtC,EAAOK,OAAOiC,MACrBJ,YACoB,MAAlB+C,EAAOrH,OACH,OACkB,MAAlBqH,EAAOrH,OACP,SACkB,MAAlBqH,EAAOrH,OACP,SACA,gBAEN0F,UAAU,EAdZ,UAgBE,cAACrC,EAAD,CAAQqB,MAAM,IAAd,kBACA,cAACrB,EAAD,CAAQqB,MAAM,IAAd,oBACA,cAACrB,EAAD,CAAQqB,MAAM,IAAd,mBACA,cAACrB,EAAD,CAAQqB,MAAM,IAAd,oCAIJ,eAAC,IAAKX,KAAN,CACEC,MAAM,YACNC,KAAK,WACLC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,6BANf,UAUE,cAAC,IAAD,CAMEC,KAAK,OACLJ,KAAK,WACLO,SAAUpC,EAAOqC,aACjBC,MACEtC,EAAOK,OAAOyE,SACV9E,EAAOK,OAAOyE,SAASvH,MAAM,KAAK,GAClCyC,EAAOK,OAAOyE,SAEpBxB,UAAU,IAEXtD,EAAO9C,OAAO4H,SACb,sBAAM3D,UAAU,gBAAhB,SAAiCnB,EAAO9C,OAAO4H,WAC7C,QAGN,cAAC,IAAKnD,KAAN,CAAWC,MAAM,QAAjB,SACE,cAAC,IAAD,CACEK,KAAK,OACLJ,KAAK,QACLO,SAAUpC,EAAOqC,aACjBC,MAAOtC,EAAOK,OAAO8E,MACrB7B,UAAU,MAId,cAAC,IAAK3B,KAAN,UACE,cAAC,KAAD,GACEM,KAAK,UADP,qBAEO,WAFP,wBAGWjC,EAAO0B,cAHlB,0BAKK1B,EAAOoE,SACPpE,EAAOK,OAAOjD,QAAU6H,EAAO7H,OAC9B4C,EAAOK,OAAO1C,QAAUsH,EAAOtH,OAC/BqC,EAAOK,OAAOzC,SAAWqH,EAAOrH,SAC/BqH,EAAOjH,KAAOgC,EAAOK,OAAOrC,IACzBiH,EAAOjH,IAAIT,MAAM,KAAK,KACtByC,EAAOK,OAAOrC,IAAIT,MAAM,KAAK,GAC7ByC,EAAOK,OAAOrC,MAAQiH,EAAOjH,OAChCiH,EAAOH,UAAY9E,EAAOK,OAAOyE,SAC9BG,EAAOH,SAASvH,MAAM,KAAK,KAC3ByC,EAAOK,OAAOyE,SAASvH,MAAM,KAAK,GAClCyC,EAAOK,OAAOyE,WAAaG,EAAOH,WAEhB,KAAxB9E,EAAOK,OAAOjD,OACU,KAAxB4C,EAAOK,OAAO1C,OACW,KAAzBqC,EAAOK,OAAOzC,QACQ,KAAtBoC,EAAOK,OAAOrC,KACa,KAA3BgC,EAAOK,OAAOyE,UAtBlB,uBA2BK9E,EAAOoE,SACiB,KAAxBpE,EAAOK,OAAOjD,OAAwC,KAAxB4C,EAAOK,OAAO1C,MACzC,CAAEiI,OAAQ,eACV,IA9BR,iDCrTJC,EAAWC,IAAXD,OAkiBOE,MAhiBf,WACE,MAAgC/G,mBAAS,IAAzC,mBAAOgH,EAAP,KAAiBC,EAAjB,KACA,EAAgCjH,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMgH,EAASlH,qBACXD,GAAY,EAIhB,SAASoH,IACP1F,IAAM2F,IAAI,iCAAiCxF,MAAK,SAACC,GAC7B,UAAdA,EAAKA,KACP3B,EAAY,OAEZ+G,EAAYpF,EAAKA,SAIvBwF,qBAAU,WACRF,MACC,IA6CH,IA/BA,MAA4CnH,mBAAS,IAArD,mBAAOsH,EAAP,KAAuBC,EAAvB,KAcA,EAA8BvH,oBAAS,GAAvC,mBAAOkG,EAAP,KAAgBsB,EAAhB,KAEMC,EAAa,SAACtE,GAClBqE,GAAW,GACDE,SAASC,eAAe,aAC9BhE,MAAMiE,QAAU,QAlBtB,SAA8BzE,GAC5B1B,IAAMC,KAAK,sCAAuC,CAChDyB,GAAIA,IACHvB,MAAK,SAACC,GACW,UAAdA,EAAKA,KACP3B,EAAY,OAEZqH,EAAkB1F,EAAKA,KAAK,OAYhCgG,CAAqB1E,IAWduC,EAAI,EAAGA,EAAIsB,EAAS3I,OAAQqH,IAInCwB,EAAO,GAAD,OAAIF,EAAStB,GAAGgB,SAAW,EAenC,MAAoC1G,mBAAS,IAA7C,mBAAO8H,EAAP,KAAmBC,EAAnB,KAOA,EAAgD/H,oBAAS,GAAzD,mBAAOgI,EAAP,KAAyBC,EAAzB,KAEA,SAASC,IACHF,IAEaN,SAASC,eAAe,yBAC9BQ,UAAY,aAEvBpI,GAAY,EACZkI,GAAqBD,GACrBb,IAEEa,IACaN,SAASC,eAAe,yBAC9BQ,UAAY,SASvB,IAaA,EAAwCnI,oBAAS,GAAjD,mBAAOY,EAAP,KAAqBC,EAArB,KACA,EAAgCb,mBAAS,IAAzC,mBAAOU,EAAP,KAAiBC,EAAjB,KACA,EAAsCX,mBAAS,IAA/C,mBAAOc,EAAP,KAAoBC,EAApB,KACA,EAAwCf,mBAAS,IAAjD,oBAAOoI,GAAP,MAAqBC,GAArB,MAgFA,GAAsCrI,mBAAS,GAA/C,qBAAOsI,GAAP,MAAoBC,GAApB,MACA,GAAwCvI,mBAAS,GAAjD,qBAAOsF,GAAP,MACMkD,IADN,MACwBF,GAAchD,IAChCmD,GAAmBD,GAAkBlD,GACrCoD,GAAe1B,EAAS2B,MAAMF,GAAkBD,IAItD,OACE,sBAAKrG,UAAU,WAAf,UACE,sBACEA,UAAU,gBACVwB,MAAO,CAAEiE,QAAS,QAASgB,OAAQ,MAAOC,UAAW,QAFvD,UAIE,cAAC,IAAD,CAGE5F,KAAK,UACLoB,QAAS,WACP6D,KALJ,SASE,sBAAM/E,GAAG,wBAAT,yBAEF,qBACEhB,UAAU,iBACVwB,MAAO,CAMLmF,MAAO,SARX,SAWE,cAACjC,EAAD,CACE5D,KAAK,OACLC,YAAY,uCAIZE,SAAU,SAACM,IAvKrB,SAAkBA,GAEhBqE,EAAcrE,EAAEgB,OAAOpB,OAsKbF,CAASM,IAEXC,MAAO,CAELoF,MAAO,OAEPD,MAAO,OACP/E,SAAU,YAsBhB,sBAEE5B,UAAU,QACVwB,MACGqE,EAEG,CAAEJ,QAAS,QAASoB,OAAQ,KAD5B,CAAEpB,QAAS,QALnB,UASE,sBAAMzF,UAAU,QAAQkC,QAAS6D,EAAjC,kBAGA,qBAAK/F,UAAU,iBAAf,SACE,cAAC8G,EAAD,CAAkBlJ,UAAWA,YAInC,sBAAKoD,GAAG,UAAUhB,UAAU,QAA5B,UACE,sBAAMA,UAAU,QAAQkC,QAvKT,WACJqD,SAASC,eAAe,WAC9BhE,MAAMiE,QAAU,OACzBjH,EAAY,IACZE,GAAgB,GAChBsG,IAEA,IAAI+B,EAAYxB,SAASC,eAAe,6BACpCwB,EAAczB,SAASC,eAAe,8BAE1CuB,EAAU5F,MAAQ,GAClB4F,EAAUvF,MAAMiE,QAAU,OAC1BuB,EAAYxF,MAAMiE,QAAU,QA2JxB,kBAGA,sBAAKzF,UAAU,iBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,YAAYC,IAAI,GAAGe,GAAG,UACrC,qBAAKA,GAAG,iBAGZ,qBAAKhB,UAAU,iBAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,cAAC,IAAD,CAAQc,KAAK,UAAUoB,QAAS,kBApH1B,SAAUX,GAC1B,IAAI0F,EAAW1B,SAASC,eAAe,SACnC0B,EAAW3B,SAASC,eAAe,6BACnC2B,EAAa5B,SAASC,eAAe,8BAEzC0B,EAAS1F,MAAMiE,QAAU,QACzB0B,EAAW3F,MAAMiE,QAAU,QAG3B9F,QAAQC,IAAIqH,EAAShH,KACrBiG,GAAgBe,EAAShH,KA0GuBmH,IAAtC,oBAOA,uBACEpG,GAAG,4BACHF,KAAK,OACLG,SAAU,SAACM,GAAD,OA9KJ,SAACA,GACnB,IAAMkB,EAAW,IAAIC,SACrBD,EAASE,OAAO,UAAWpB,EAAEgB,OAAOC,MAAM,IAG1ClD,IAAMC,KADM,kCACIkD,GAAUhD,MAAK,SAACC,GAC9B,GAAkB,UAAdA,EAAKA,KACPC,QAAQC,IAAIF,GACZ3B,EAAY,WACP,CACL,IAAI6E,EAAOlD,EAAKA,KAAKkD,KAAKxG,MAAM,MAC5ByG,EAAa,IAAMD,EAAK,GAAX,IAAsBA,EAAK,GAExCqE,EAAW1B,SAASC,eAAe,SACvCyB,EAAS/G,IAAM4C,GAAyBD,EACxClD,QAAQC,IAAIqH,EAAShH,KACrBrB,EAAeiE,GACfnE,GAAgB,OA6JSqE,CAAYxB,IAC7BC,MAAO,CACLoF,MAAO,QACPjF,MAAO,SAET0F,KAAM,cAACC,EAAA,EAAD,MAER,cAAC,IAAD,CACExG,KAAK,UACLE,GAAG,6BACHkB,QAlKI,WACZzD,GACFa,IAAMC,KAAK,wCAAyC,CAClDgF,MAAO0B,GACPzG,YAAab,IACZc,MAAK,SAACC,GAIP,GADAC,QAAQC,IAAIF,GACM,UAAdA,EAAKA,KACP3B,EAAY,WACP,CAEL,IAAIgJ,EAAYxB,SAASC,eAAe,6BACpCwB,EAAczB,SAASC,eACzB,8BAEFuB,EAAUvF,MAAMiE,QAAU,OAC1BuB,EAAYxF,MAAMiE,QAAU,OAC5B7G,IACAJ,EAAY,sBA2IR,oBAOCC,EACC,qBACE+C,MAAO,CACLG,MAAO,QAEP4F,QAAS,MACTX,MAAO,QACPY,WAAY,MACZ5F,SAAU,OAPd,SAUGrD,IAED,gBAKZ,qBAAKyB,UAAU,QAAQgB,GAAG,YAAYQ,MAAO,CAAEqF,OAAQ,KAAvD,SACG9C,EACC,gCACE,sBAAM/D,UAAU,QAAQkC,QA5SV,WACZqD,SAASC,eAAe,aAC9BhE,MAAMiE,QAAU,OACpBJ,GAAW,GACXD,EAAkB,IAClBJ,KAuSQ,kBAGA,qBAAKhF,UAAU,iBAAf,SACE,cAAC,EAAD,CAAS8D,OAAQqB,EAAgBpB,QAASA,SAI9C,8CAGJ,qBAAK/D,UAAU,eAAf,SACGuG,GACEkB,QAAO,SAACC,EAAKC,GACZ,MAAmB,KAAfhC,GAAsBA,EAGxBY,GAAaoB,GAAK1L,MACfkI,cACA5H,SAASoJ,EAAWxB,gBACvBoC,GAAaoB,GAAKnL,MACf2H,cACA5H,SAASoJ,EAAWxB,gBACvBoC,GAAaoB,GAAK3D,MACfG,cACA5H,SAASoJ,EAAWxB,eAEhBuD,EAEA,GAdAA,KAiBVjE,KAAI,SAACiE,EAAKC,GACT,OACE,sBAAK3H,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBACEC,IAAKyH,EAAIzL,MACT+E,GAAE,WAAM0G,EAAInD,OACZrE,IACEwH,EAAIlI,aAA0C,IAA3BkI,EAAIlI,YAAYtD,OAC/BwL,EAAIlI,YACJ,iDAENgC,MAAO,CAAEiD,OAAQ,WACjBvC,QAAS,SAACX,GAAD,OAjSR,SAAUA,GAE7B,IAAI2F,EAAW3B,SAASC,eAAe,WAEnCyB,EAAW1B,SAASC,eAAe,SACnCoC,EAAcrC,SAASC,eAAe,WAE1C0B,EAAS1F,MAAMiE,QAAU,QACzBwB,EAAS/G,IAAMqB,EAAEgB,OAAOrC,IACxB+G,EAAShH,IAAMsB,EAAEgB,OAAOvB,GAAGwF,MAAM,GACjCoB,EAAY5B,UAAYzE,EAAEgB,OAAOtC,IAuRC4H,CAAatG,MAE/B,sBAAKvB,UAAU,oBAAf,UACE,iCACG0H,EAAIzL,MADP,IACeyL,EAAIlL,SAEnB,+BAAOkL,EAAI1D,cAGf,sBAAKhE,UAAU,UAAU8H,SAAS,KAAlC,UAME,cAAC,IAAD,CAEEhH,KAAK,UACLoB,QAAS,YA7V7B,SAAgBlB,GACd,IAAI+G,EAAQxC,SAASC,eAAexE,GAIf,SAFF+G,EAAMvG,MAAMwG,iBAAiB,WAEnBD,EAAMvG,MAAMyG,YAAY,UAAW,SAC3DF,EAAMvG,MAAMyG,YAAY,UAAW,QAwVpBC,CAAOR,EAAInD,QAEb/C,MAAO,CACLoF,MAAO,SAPX,kBAYA,cAAC,IAAD,CAEE9F,KAAK,UAELoB,QAAS,WACPoD,EAAWoC,EAAInD,QALnB,kBAUA,cAAC,IAAD,CACErC,QAAS,WAna7B,IAAoBlB,EAqaImH,OAAOC,QACL,kDAtaNpH,EAyae0G,EAAInD,MAxarCjF,IAAMC,KAAK,mCAAoC,CAC7CgF,MAAOvD,IACNvB,MAAK,SAACC,GACW,UAAdA,EAAKA,KACP3B,EAAY,OAEZiH,SAsaclE,KAAK,UACLuH,QAAM,EAZR,0BAmBJ,qBACErI,UAAU,UACVgB,GAAI0G,EAAInD,MACR/C,MAAO,CAAEiE,QAAS,QAHpB,SAKE,qBAAKzF,UAAU,WAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,uBAAf,UACE,+CAAkB0H,EAAInD,SACtB,gDACkBmD,EAAI7K,IAAI2J,MAAM,EAAG,IADnC,IAEGkB,EAAI7K,IAAI2J,MAAM,EAAG,GAFpB,IAEyBkB,EAAI7K,IAAI2J,MAAM,EAAG,MAE1C,wCACU,IACQ,MAAfkB,EAAIjL,OACD,OACe,MAAfiL,EAAIjL,OACJ,SACe,MAAfiL,EAAIjL,OACJ,SACA,mBAEN,4CACciL,EAAI/D,SAAS6C,MAAM,EAAG,IADpC,IAEGkB,EAAI/D,SAAS6C,MAAM,EAAG,GAFzB,IAE8BkB,EAAI/D,SAAS6C,MAAM,EAAG,iBA7FpCmB,QAkIlC,cAAC,EAAD,CACExE,aAAcA,GACdC,WAAYyB,EAAS3I,OACrBmH,SApTW,SAACiF,GAAD,OAAgBlC,GAAekC,MAuT5C,qBACEtI,UAAU,oBACVwB,MAAoB,QAAb1D,EAAqB,CAAE2H,QAAS,QAAW,CAAEA,QAAS,SAF/D,SAIgB,QAAb3H,EACC,qBAAKkC,UAAU,QAAf,SACE,qBACEA,UAAU,aACVC,IAAI,qBACJC,IAAKC,MAGP,WC5fGoI,EAtCH,WACV,OACE,gCACE,qBAAKvI,UAAU,SAAf,SAqBE,mBAAGA,UAAU,SAASwI,KAAK,IAA3B,0CAKF,cAAC,IAAD,UACE,cAAC,IAAD,CAAO5F,KAAK,IAAI6F,OAAK,EAACC,OAAQ,SAACC,GAAD,OAAW,cAAC,EAAD,aC1BlCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrJ,MAAK,YAAkD,IAA/CsJ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEF9D,SAASC,eAAe,SAG1BoD,M","file":"static/js/main.e7fba665.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/404.9c02e504.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useFormik } from \"formik\";\r\nimport \"./CreatePost_2.css\";\r\nimport errorImage from \"./404.jpg\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import { Button } from \"react-bootstrap\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, Select, Button } from \"antd\";\r\n\r\nconst validateEmployee = (empData) => {\r\n  const errors = {};\r\n  var special_charecter = `/[!@#$%^&*()_+-=[]{};':\"\\\\|,.<>/?]+/;\\``;\r\n\r\n  // First Name\r\n  if (empData.fname[0] === \" \") errors.fname = \"Please enter a valid name\";\r\n  else if (empData.fname.length > 30)\r\n    errors.fname = \"Length should be max 30 characters\";\r\n  else if (empData.fname.match(/\\d+/g) != null)\r\n    errors.fname = \"Please enter a valid name\";\r\n  // else if (empData.fname.match(/^[^a-zA-Z0-9]+$/))\r\n  else if (special_charecter.split(\"\").some((c) => empData.fname.includes(c)))\r\n    errors.fname = \"Please enter a valid name\";\r\n\r\n  // Last Name\r\n  if (empData.lname[0] === \" \") errors.lname = \"Please enter a valid name\";\r\n  else if (empData.lname.length > 30)\r\n    errors.lname = \"Length should be max 30 characters\";\r\n  else if (empData.lname.match(/\\d+/g) != null)\r\n    errors.lname = \"Please enter a valid name\";\r\n  else if (special_charecter.split(\"\").some((c) => empData.lname.includes(c)))\r\n    errors.lname = \"Please enter a valid name\";\r\n\r\n  // Gender\r\n  if (empData.gender === \"select_gender\")\r\n    errors.gender = \"Please select gender\";\r\n\r\n  //Date Of Birth\r\n  const todayDate = new Date();\r\n  const dateOfBirth = new Date(empData.dob);\r\n  const diffDateInDays = Math.ceil(\r\n    Math.abs(todayDate - dateOfBirth) / (1000 * 60 * 60 * 24)\r\n  );\r\n  if (todayDate <= dateOfBirth)\r\n    errors.dob = \"Please enter a valid Date of Birth\";\r\n  else if (diffDateInDays >= 100 * 366 && dateOfBirth < todayDate)\r\n    errors.dob = \"Please enter a valid Date of Birth\";\r\n  else if (diffDateInDays <= 20 * 366)\r\n    errors.dob = \"Please enter a valid Date of Birth\";\r\n\r\n  // Hire Date\r\n  const hireDate = new Date(empData.hireDate);\r\n  const foundationDate = new Date(1996, 0, 1);\r\n  // console.log(\"-->\", foundationDate, \" -->\", hireDate);\r\n  const diffDOBAndHireDateInDays = Math.ceil(\r\n    Math.abs(hireDate - dateOfBirth) / (1000 * 60 * 60 * 24)\r\n  );\r\n  if (hireDate < dateOfBirth)\r\n    errors.hireDate = \"Please enter a valid Hire Date\";\r\n  else if (hireDate > todayDate)\r\n    errors.hireDate = \"Please enter a valid Hire Date\";\r\n  else if (hireDate < foundationDate)\r\n    errors.hireDate = \"Please enter a valid Hire Date\";\r\n  else if (diffDOBAndHireDateInDays < 15 * 366)\r\n    errors.hireDate = \"HPlease enter a valid Hire Date\";\r\n\r\n  return errors;\r\n};\r\n\r\nconst validateEmpEmpty = (\r\n  stateFname,\r\n  stateLname,\r\n  stateDOB,\r\n  stateGender,\r\n  stateHireDate\r\n) => {\r\n  const errors = {};\r\n  // console.log(stateFname, stateLname, stateDOB, stateGender, stateHireDate);\r\n  if (stateFname) errors.fname = \"*Required\";\r\n  if (stateLname) errors.lname = \"*Required\";\r\n  if (stateGender) errors.gender = \"*Required\";\r\n  if (stateDOB) errors.dob = \"*Required\";\r\n  if (stateHireDate) errors.hireDate = \"*Required\";\r\n  return errors;\r\n};\r\n\r\nfunction CreatePost({ closeSpan }) {\r\n  // const [disable, setDisable] = useState({!formik.isValid});\r\n\r\n  const [errorMsg, setErrorMsg] = useState([]);\r\n  const [stateFname, setStateFname] = useState({ fname: false });\r\n  const [stateLname, setStateLname] = useState({ lname: false });\r\n  const [stateDOB, setStateDOB] = useState({ dob: false });\r\n  const [stateGender, setStateGender] = useState({ gender: false });\r\n  const [stateHireDate, setStateHireDate] = useState({ hireDate: false });\r\n  const [image, setImage] = useState(\r\n    \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTuYn4HLNI93L5Cp8W_BoimZlpwiSi_Y2mLW9qGoYmUe29v9EuCrv1GL1QyeDWXOMS3OLI&usqp=CAU\"\r\n  );\r\n  const [imageMsg, setImageMsg] = useState(\"\");\r\n  const [profileImage, setProfileImage] = useState(false);\r\n  const [imagePathDB, setImagePathDB] = useState(\"\");\r\n\r\n  const resetImage = function () {\r\n    setProfileImage(false);\r\n    setImage(\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTuYn4HLNI93L5Cp8W_BoimZlpwiSi_Y2mLW9qGoYmUe29v9EuCrv1GL1QyeDWXOMS3OLI&usqp=CAU\"\r\n    );\r\n    setImageMsg(\"\");\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      fname: \"\",\r\n      lname: \"\",\r\n      dob: \"\",\r\n      gender: \"\",\r\n      hireDate: \"\",\r\n    },\r\n    validate: validateEmployee,\r\n    // validate: validateEmpEmpty,\r\n    onSubmit: (values) => {\r\n      // console.log(values);\r\n      submitPost(values);\r\n      formik.resetForm();\r\n      resetImage();\r\n    },\r\n  });\r\n\r\n  const stateValidate = {\r\n    validate: validateEmpEmpty(\r\n      stateFname,\r\n      stateLname,\r\n      stateDOB,\r\n      stateGender,\r\n      stateHireDate\r\n    ),\r\n  };\r\n\r\n  const submitPost = (values) => {\r\n    Axios.post(\"http://localhost:3002/api/create\", {\r\n      fname: values.fname,\r\n      lname: values.lname,\r\n      dob: values.dob,\r\n      gender: values.gender,\r\n      hireDate: values.hireDate,\r\n      picturepath: imagePathDB,\r\n    }).then((data) => {\r\n      // handleSubmitUtil();\r\n      // alert(data.data);\r\n      console.log(data);\r\n      if (data.data === \"ERROR\") {\r\n        setErrorMsg(\"404\");\r\n      } else {\r\n        alert(\"Record Updated Successfully\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const uploadPhoto = (e) => {\r\n    console.log(e.target.files[0]);\r\n    const formData = new FormData();\r\n    formData.append(\"myImage\", e.target.files[0]);\r\n    // setImage(URL.createObjectURL(e.target.files[0]));\r\n    formData.append(\"title\", \"IMAGE_NAME_AMAN_DUBEY\");\r\n    console.log(formData);\r\n    // const config = {\r\n    //   headers: {\r\n    //     \"content-type\": \"multipart/form-data\",\r\n    //   },\r\n    // };\r\n\r\n    const url = \"http://localhost:3002/api/image\";\r\n    Axios.post(url, formData).then((data) => {\r\n      if (data.data === \"ERROR\") {\r\n        console.log(data);\r\n        setErrorMsg(\"404\");\r\n      } else {\r\n        // console.log(\"Response \", data.data);\r\n        var path = data.data.path.split(\"\\\\\");\r\n        var path_print = `/` + path[1] + `/` + path[2];\r\n        setImage(process.env.PUBLIC_URL + path_print);\r\n        setImagePathDB(path_print);\r\n        setImageMsg(path[2]);\r\n        setProfileImage(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  if (closeSpan) formik.resetForm();\r\n  // const running = () => {\r\n  //   if (closeSpan) formik.resetForm();\r\n  // };\r\n  // running();\r\n  const { Option } = Select;\r\n  console.log(\"Form Data\", formik.values);\r\n  return (\r\n    <div className=\"CreateEmp\">\r\n      <div className=\"EmpContainerError\">\r\n        {errorMsg === \"404\" ? (\r\n          <div className=\"Error\">\r\n            <img\r\n              className=\"ErrorImage\"\r\n              alt=\"404 Page Not Found\"\r\n              src={errorImage}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Form\r\n              labelCol={{ span: 4 }}\r\n              layout=\"horizontal\"\r\n              // className=\"uploadEmp\"\r\n              onSubmit={formik.handleSubmit}\r\n            >\r\n              {/* First Name */}\r\n\r\n              <Form.Item\r\n                label=\"First Name\"\r\n                name=\"fname\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter valid Input\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"John\"\r\n                  id=\"fname\"\r\n                  name=\"fname\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.fname}\r\n                  onSelect={formik.handleBlur}\r\n                  onBlur={(e) => {\r\n                    if (!formik.values.fname) setStateFname({ fname: true });\r\n                    else setStateFname({ fname: false });\r\n                  }}\r\n                  // onChange={(formik.handleChange, formik.handleBlur)}\r\n                  style={\r\n                    (formik.touched.fname && formik.errors.fname) ||\r\n                    (stateFname.fname && !formik.values.fname) ||\r\n                    ((formik.touched.lname ||\r\n                      formik.touched.dob ||\r\n                      formik.touched.gender ||\r\n                      formik.touched.hireDate) &&\r\n                      !formik.values.fname)\r\n                      ? { border: \"2px solid red\" }\r\n                      : null\r\n                  }\r\n                />\r\n                <div className=\"errorBox\">\r\n                  {formik.touched.fname && formik.errors.fname ? (\r\n                    <span style={{ color: \"red\", fontSize: 15 }}>\r\n                      {formik.errors.fname}\r\n                    </span>\r\n                  ) : null}\r\n                  {(stateFname.fname && !formik.values.fname) ||\r\n                  ((formik.touched.lname ||\r\n                    formik.touched.dob ||\r\n                    formik.touched.gender ||\r\n                    formik.touched.hireDate) &&\r\n                    !formik.values.fname) ? (\r\n                    <span style={{ color: \"red\", fontSize: 15 }}>\r\n                      {stateValidate.validate.fname}\r\n                    </span>\r\n                  ) : null}\r\n                </div>\r\n              </Form.Item>\r\n\r\n              {/* Last Name */}\r\n              <Form.Item\r\n                label=\"Last Name\"\r\n                name=\"lname\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter valid Input\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  required=\"required\"\r\n                  placeholder=\"Snow\"\r\n                  id=\"lname\"\r\n                  name=\"lname\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.lname}\r\n                  onBlur={(e) => {\r\n                    if (!formik.values.lname) setStateLname({ lname: true });\r\n                    else setStateLname({ lname: false });\r\n                  }}\r\n                  onSelect={formik.handleBlur}\r\n                  style={\r\n                    (formik.touched.lname && formik.errors.lname) ||\r\n                    (stateLname.lname && !formik.values.lname) ||\r\n                    ((formik.touched.dob ||\r\n                      formik.touched.gender ||\r\n                      formik.touched.hireDate) &&\r\n                      !formik.values.lname)\r\n                      ? { border: \"1px solid red\" }\r\n                      : null\r\n                  }\r\n                />\r\n                <div className=\"errorBox\">\r\n                  {formik.touched.lname && formik.errors.lname ? (\r\n                    <span style={{ color: \"red\" }}>{formik.errors.lname}</span>\r\n                  ) : null}\r\n                  {(stateLname.lname && !formik.values.lname) ||\r\n                  ((formik.touched.dob ||\r\n                    formik.touched.gender ||\r\n                    formik.touched.hireDate) &&\r\n                    !formik.values.lname) ? (\r\n                    <span\r\n                      style={{\r\n                        color: \"red\",\r\n                        fontSize: 15,\r\n                      }}\r\n                    >\r\n                      {stateValidate.validate.lname}\r\n                    </span>\r\n                  ) : null}\r\n                </div>\r\n              </Form.Item>\r\n\r\n              {/* Date of Birth */}\r\n              <Form.Item\r\n                label=\"Date of Birth\"\r\n                name=\"dob\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter valid Input\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  required=\"required\"\r\n                  placeholder=\"03/14/1975\"\r\n                  onFocus={(e) => {\r\n                    e.currentTarget.type = \"date\";\r\n                    e.currentTarget.focus();\r\n                  }}\r\n                  id=\"dob\"\r\n                  name=\"dob\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.dob}\r\n                  onBlur={(e) => {\r\n                    if (!formik.values.dob) setStateDOB({ dob: true });\r\n                    else setStateDOB({ dob: false });\r\n                  }}\r\n                  onSelect={formik.handleBlur}\r\n                  style={\r\n                    (formik.touched.dob && formik.errors.dob) ||\r\n                    (stateDOB.dob && !formik.values.dob) ||\r\n                    ((formik.touched.gender || formik.touched.hireDate) &&\r\n                      !formik.values.dob)\r\n                      ? { border: \"1px solid red\" }\r\n                      : null\r\n                  }\r\n                />\r\n                <div className=\"errorBox\">\r\n                  {formik.touched.dob && formik.errors.dob ? (\r\n                    <span style={{ color: \"red\" }}>{formik.errors.dob}</span>\r\n                  ) : null}\r\n                  {(stateDOB.dob && !formik.values.dob) ||\r\n                  ((formik.touched.gender || formik.touched.hireDate) &&\r\n                    !formik.values.dob) ? (\r\n                    <span style={{ color: \"red\", fontSize: 15 }}>\r\n                      {stateValidate.validate.dob}\r\n                    </span>\r\n                  ) : null}\r\n                </div>\r\n              </Form.Item>\r\n\r\n              {/* Gender */}\r\n              <Form.Item\r\n                label=\"Select Gender\"\r\n                name=\"gender\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter valid Input\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  type=\"text\"\r\n                  required=\"required\"\r\n                  defaultValue=\"\"\r\n                  id=\"gender\"\r\n                  name=\"gender\"\r\n                  onChange={(value) => formik.setFieldValue(\"gender\", value)}\r\n                  // onChange={formik.handleChange}\r\n                  value={formik.values.value}\r\n                  onBlur={(e) => {\r\n                    if (!formik.values.gender) setStateGender({ gender: true });\r\n                    else setStateGender({ gender: false });\r\n                  }}\r\n                  // onClick={formik.handleBlur}\r\n                  onClick={() => {\r\n                    formik.touched.gender = true;\r\n                  }}\r\n                  style={\r\n                    (formik.touched.gender && formik.errors.gender) ||\r\n                    (stateGender.gender && !formik.values.gender) ||\r\n                    (formik.touched.hireDate && !formik.values.gender)\r\n                      ? { border: \"1px solid red\" }\r\n                      : null\r\n                  }\r\n                >\r\n                  <Select.Option\r\n                    key=\"1\"\r\n                    value=\"\"\r\n                    disabled={true}\r\n                    hidden={true}\r\n                    style={{ color: \"#b5b5b5\" }}\r\n                  >\r\n                    <em style={{ fontStyle: \"normal\", color: \"#b5b5b5\" }}>\r\n                      Male\r\n                    </em>{\" \"}\r\n                  </Select.Option>\r\n                  <Option key=\"2\" value=\"M\">\r\n                    Male\r\n                  </Option>\r\n                  <Option key=\"3\" value=\"F\">\r\n                    Female\r\n                  </Option>\r\n                  <Option key=\"4\" value=\"O\">\r\n                    Other\r\n                  </Option>\r\n                  <Option key=\"5\" value=\"N\">\r\n                    Prefer Not to Say\r\n                  </Option>\r\n                </Select>\r\n                <div className=\"errorBox\">\r\n                  {formik.touched.gender && formik.errors.gender ? (\r\n                    <span style={{ color: \"red\" }}>{formik.errors.gender}</span>\r\n                  ) : null}\r\n                  {(stateGender.gender && !formik.values.gender) ||\r\n                  (formik.touched.hireDate && !formik.values.gender) ? (\r\n                    <span style={{ color: \"red\", fontSize: 15 }}>\r\n                      {stateValidate.validate.gender}\r\n                    </span>\r\n                  ) : null}\r\n                </div>\r\n              </Form.Item>\r\n\r\n              {/* Hire Date */}\r\n              <Form.Item\r\n                label=\"Hire Date\"\r\n                name=\"hiredate\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter valid Input\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  type=\"text\"\r\n                  required=\"required\"\r\n                  placeholder=\"07/11/2007\"\r\n                  onFocus={(e) => {\r\n                    e.currentTarget.type = \"date\";\r\n                    e.currentTarget.focus();\r\n                  }}\r\n                  id=\"hireDate\"\r\n                  name=\"hireDate\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.hireDate}\r\n                  onBlur={(e) => {\r\n                    if (!formik.values.hireDate)\r\n                      setStateHireDate({ hireDate: true });\r\n                    else setStateHireDate({ hireDate: false });\r\n                  }}\r\n                  onSelect={formik.handleBlur}\r\n                  style={\r\n                    (formik.touched.hireDate && formik.errors.hireDate) ||\r\n                    (stateHireDate.hireDate && !formik.values.hireDate)\r\n                      ? { border: \"1px solid red\" }\r\n                      : null\r\n                  }\r\n                />\r\n                <div className=\"errorBox\">\r\n                  {formik.touched.hireDate && formik.errors.hireDate ? (\r\n                    <span style={{ color: \"red\" }}>\r\n                      {formik.errors.hireDate}\r\n                    </span>\r\n                  ) : null}\r\n                  {stateHireDate.hireDate && !formik.values.hireDate ? (\r\n                    <span style={{ color: \"red\", fontSize: 15 }}>\r\n                      {stateValidate.validate.hireDate}\r\n                    </span>\r\n                  ) : null}\r\n                </div>\r\n              </Form.Item>\r\n\r\n              {/* NEW INPUT BOX */}\r\n              <Form.Item\r\n                label=\"Upload Image\"\r\n                name=\"uploadImage\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please enter valid Input\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  type=\"file\"\r\n                  name=\"myImage\"\r\n                  title=\"Choose a video please\"\r\n                  // value=\"name\"\r\n                  placeholder=\"name\"\r\n                  onChange={(e) => {\r\n                    uploadPhoto(e);\r\n                    if (profileImage === false) e = null;\r\n                  }}\r\n                />\r\n\r\n                <span style={{ paddingTop: \"6px\", color: \"green\" }}>\r\n                  {imageMsg}\r\n                </span>\r\n              </Form.Item>\r\n              <div className=\"inputbox-2\">\r\n                <img alt=\"Upload\" src={image} />\r\n              </div>\r\n              {/* END INPUT FILE */}\r\n\r\n              {/* Submit */}\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"submit\"\r\n                  // varient=\"primary\"\r\n                  type=\"primary\"\r\n                  onClick={formik.handleSubmit}\r\n                  disabled={\r\n                    !formik.isValid ||\r\n                    !formik.values.fname ||\r\n                    !formik.values.lname ||\r\n                    !formik.values.gender ||\r\n                    !formik.values.dob ||\r\n                    !formik.values.hireDate ||\r\n                    !profileImage\r\n                  }\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n\r\n            {/* </form> */}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePost;\r\n","import React from \"react\";\r\nimport \"./Pagination.css\";\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"paginationBox\">\r\n      <div className=\"paginationBoxRight\">\r\n        {pageNumbers.map((number) => (\r\n          <div key={number} className=\"page-item\">\r\n            <span onClick={() => paginate(number)} className=\"page-link\">\r\n              {number}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport \"./EditBox.css\";\r\n// import { Form, Row, Col, Button } from \"react-bootstrap\";\r\n// import { Button } from \"react-bootstrap\";\r\nimport { Button } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, Select } from \"antd\";\r\nimport { useFormik } from \"formik\";\r\n\r\nconst validateEmployee = (empData) => {\r\n  const errors = {};\r\n  var special_charecter = `/[!@#$%^&*()_+-=[]{};':\"\\\\|,.<>/?]+/;\\``;\r\n\r\n  // First Name\r\n  if (empData.fname === \"\") errors.fname = \"Please enter a valid name\";\r\n  else if (empData.fname.length > 30)\r\n    errors.fname = \"Length should be max 30 characters\";\r\n  else if (empData.fname.match(/\\d+/g) != null)\r\n    errors.fname = \"Please enter a valid name\";\r\n  // else if (empData.fname.match(/^[^a-zA-Z0-9]+$/))\r\n  else if (special_charecter.split(\"\").some((c) => empData.fname.includes(c)))\r\n    errors.fname = \"Please enter a valid name\";\r\n\r\n  // Last Name\r\n  if (empData.lname === \"\") errors.lname = \"Please enter a valid name\";\r\n  else if (empData.lname.length > 30)\r\n    errors.lname = \"Length should be max 30 characters\";\r\n  else if (empData.lname.match(/\\d+/g) != null)\r\n    errors.lname = \"Please enter a valid name\";\r\n  else if (special_charecter.split(\"\").some((c) => empData.lname.includes(c)))\r\n    errors.lname = \"Please enter a valid name\";\r\n\r\n  //Date Of Birth\r\n  const todayDate = new Date();\r\n  const dateOfBirth = new Date(empData.dob);\r\n  const diffDateInDays = Math.ceil(\r\n    Math.abs(todayDate - dateOfBirth) / (1000 * 60 * 60 * 24)\r\n  );\r\n  if (empData.dob === \"\") errors.dob = \"Please enter a valid Date of Birth\";\r\n  else if (todayDate <= dateOfBirth)\r\n    errors.dob = \"Please enter a valid Date of Birth\";\r\n  else if (diffDateInDays >= 100 * 366 && dateOfBirth < todayDate)\r\n    errors.dob = \"Please enter a valid Date of Birth\";\r\n  else if (diffDateInDays <= 20 * 366)\r\n    errors.dob = \"Please enter a valid Date of Birth\";\r\n\r\n  // Hire Date\r\n  const hiredate = new Date(empData.hiredate);\r\n  const foundationDate = new Date(1996, 0, 1);\r\n  // console.log(\"-->\", foundationDate, \" -->\", hiredate);\r\n  const diffDOBAndhiredateInDays = Math.ceil(\r\n    Math.abs(hiredate - dateOfBirth) / (1000 * 60 * 60 * 24)\r\n  );\r\n  if (empData.hiredate === \"\")\r\n    errors.hiredate = \"Please enter a valid Hire Date\";\r\n  if (hiredate < dateOfBirth)\r\n    errors.hiredate = \"Please enter a valid Hire Date\";\r\n  else if (hiredate > todayDate)\r\n    errors.hiredate = \"Please enter a valid Hire Date\";\r\n  else if (hiredate < foundationDate)\r\n    errors.hiredate = \"Please enter a valid Hire Date\";\r\n  else if (diffDOBAndhiredateInDays < 15 * 366)\r\n    errors.hiredate = \"HPlease enter a valid Hire Date\";\r\n  return errors;\r\n};\r\n\r\nconst EditBox = ({ record, loading }) => {\r\n  // const [statusChange, setStatusChange] = useState(false);\r\n\r\n  const [editRecordData, setEditRecordData] = useState([]);\r\n  function viewIndividualRecord(id) {\r\n    Axios.post(\"http://localhost:3002/api/getFromId\", {\r\n      id: id,\r\n    }).then((data) => {\r\n      if (data.data === \"ERROR\") {\r\n        alert(\"404\");\r\n      } else {\r\n        setEditRecordData(data.data[0]);\r\n        // console.log(\"HAHAHA\", editRecordData);\r\n        record = data.data[0];\r\n      }\r\n    });\r\n  }\r\n\r\n  const updatePost = (values) => {\r\n    console.log(values);\r\n    Axios.post(\"http://localhost:3002/api/updateRecord\", {\r\n      fname: values.fname,\r\n      lname: values.lname,\r\n      dob: values.dob,\r\n      gender: values.gender,\r\n      hiredate: values.hiredate,\r\n      email: values.email,\r\n      empid: values.empid,\r\n    }).then((data) => {\r\n      // handleSubmitUtil();\r\n      // alert(data.data);\r\n      console.log(data);\r\n      if (data.data === \"ERROR\") {\r\n        // setErrorMsg(\"404\");\r\n        alert(\"404\");\r\n      } else {\r\n        alert(\"Record Updated Successfully\");\r\n        // viewIndividualRecord(values.empid);\r\n      }\r\n    });\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      fname: record.fname,\r\n      lname: record.lname,\r\n      dob: record.dob,\r\n      gender: record.gender,\r\n      hiredate: record.hiredate,\r\n      email: record.email,\r\n    },\r\n    enableReinitialize: true,\r\n    validate: validateEmployee,\r\n    onSubmit: (values) => {\r\n      // console.log(values);\r\n      submitPost(values);\r\n      // formik.resetForm();\r\n    },\r\n  });\r\n\r\n  if (!loading) {\r\n    return <h2>Loading...</h2>;\r\n  }\r\n\r\n  function submitPost(values) {\r\n    if (values.fname === \"\") values.fname = record.fname;\r\n    if (values.lname === \"\") values.lname = record.lname;\r\n    if (values.gender === \"\") values.gender = record.gender;\r\n    if (values.dob === \"\") values.dob = record.dob;\r\n    if (values.hiredate === \"\") values.hiredate = record.hiredate;\r\n    if (values.email === \"\") values.email = record.email;\r\n    if (values.fname !== \"\") {\r\n      values.email = \"\".concat(\r\n        values.fname.toLowerCase(),\r\n        \".\",\r\n        Math.floor(Math.random() * 101).toString(),\r\n        \"@myCompany.com\"\r\n      );\r\n    }\r\n    values.empid = record.empid;\r\n\r\n    console.log(values);\r\n    updatePost(values);\r\n    // viewIndividualRecord(values.empid);\r\n  }\r\n\r\n  console.log(formik.values);\r\n  // console.log(formik.errors);\r\n  console.log(formik.values.dob);\r\n  if (record.dob) console.log(record.dob.split(\"T\")[0]);\r\n  if (formik.values.dob) console.log(formik.values.dob.split(\"T\")[0]);\r\n  console.log(formik.values.hiredate);\r\n  const { Option } = Select;\r\n\r\n  return (\r\n    <div className=\"recordEditClass\">\r\n      <div className=\"recordEditClassChild\">\r\n        <Form\r\n          onSubmit={formik.handleSubmit}\r\n          labelCol={{ span: 4 }}\r\n          // wrapperCol={{ span: 14 }}\r\n          layout=\"horizontal\"\r\n        >\r\n          {/* First Name */}\r\n\r\n          <Form.Item\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please enter valid Input\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              type=\"text\"\r\n              name=\"fname\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.fname}\r\n              // placeholder={record.fname}\r\n              style={formik.errors.fname ? { border: \"2px solid red\" } : null}\r\n            />\r\n\r\n            {formik.errors.fname ? (\r\n              <span className=\"formik_errors\">{formik.errors.fname}</span>\r\n            ) : null}\r\n          </Form.Item>\r\n          {/* Last Name */}\r\n          <Form.Item\r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please enter valid Input\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              type=\"text\"\r\n              name=\"lname\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.lname}\r\n              // placeholder={record.lname}\r\n            />\r\n            {formik.errors.lname ? (\r\n              <span className=\"formik_errors\">{formik.errors.lname}</span>\r\n            ) : null}\r\n          </Form.Item>\r\n          {/* Date of Birth */}\r\n          <Form.Item\r\n            label=\"Date of Birth\"\r\n            name=\"DateOfBirth\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please enter valid Input\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              // placeholder={record.dob}\r\n              // onFocus={(e) => {\r\n              //   e.currentTarget.type = \"date\";\r\n              //   e.currentTarget.focus();\r\n              // }}\r\n              type=\"date\"\r\n              name=\"dob\"\r\n              onChange={formik.handleChange}\r\n              value={\r\n                formik.values.dob\r\n                  ? formik.values.dob.split(\"T\")[0]\r\n                  : formik.values.dob\r\n              }\r\n              disabled={false}\r\n            />\r\n            {formik.errors.dob ? (\r\n              <span className=\"formik_errors\">{formik.errors.dob}</span>\r\n            ) : null}\r\n          </Form.Item>\r\n          {/* Gender */}\r\n          <Form.Item\r\n            label=\"Select Gender\"\r\n            name=\"gender\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please enter valid Input\",\r\n              },\r\n            ]}\r\n          >\r\n            <Select\r\n              type=\"text\"\r\n              name=\"gender\"\r\n              onChange={(value) => formik.setFieldValue(\"gender\", value)}\r\n              value={formik.values.value}\r\n              placeholder={\r\n                record.gender === \"M\"\r\n                  ? \"Male\"\r\n                  : record.gender === \"F\"\r\n                  ? \"Female\"\r\n                  : record.gender === \"O\"\r\n                  ? \"Others\"\r\n                  : \"Not Available\"\r\n              }\r\n              disabled={false}\r\n            >\r\n              <Option value=\"M\">Male</Option>\r\n              <Option value=\"F\">Female</Option>\r\n              <Option value=\"O\">Other</Option>\r\n              <Option value=\"N\">Prefer Not to Say</Option>\r\n            </Select>\r\n          </Form.Item>\r\n          {/* Hire Date */}\r\n          <Form.Item\r\n            label=\"Hire Date\"\r\n            name=\"hireDate\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please enter valid Input\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              // placeholder={record.hiredate}\r\n              // onFocus={(e) => {\r\n              //   e.currentTarget.type = \"date\";\r\n              //   e.currentTarget.focus();\r\n              // }}\r\n              type=\"date\"\r\n              name=\"hiredate\"\r\n              onChange={formik.handleChange}\r\n              value={\r\n                formik.values.hiredate\r\n                  ? formik.values.hiredate.split(\"T\")[0]\r\n                  : formik.values.hiredate\r\n              }\r\n              disabled={false}\r\n            />\r\n            {formik.errors.hiredate ? (\r\n              <span className=\"formik_errors\">{formik.errors.hiredate}</span>\r\n            ) : null}\r\n          </Form.Item>\r\n          {/* Email */}\r\n          <Form.Item label=\"Email\">\r\n            <Input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              onChange={formik.handleChange}\r\n              value={formik.values.email}\r\n              disabled={true}\r\n            />\r\n          </Form.Item>\r\n          {/* Submit */}\r\n          <Form.Item>\r\n            <Button\r\n              type=\"submit\"\r\n              type=\"primary\"\r\n              onClick={formik.handleSubmit}\r\n              disabled={\r\n                !formik.isValid ||\r\n                (formik.values.fname === record.fname &&\r\n                  formik.values.lname === record.lname &&\r\n                  formik.values.gender === record.gender &&\r\n                  (record.dob && formik.values.dob\r\n                    ? record.dob.split(\"T\")[0] ===\r\n                      formik.values.dob.split(\"T\")[0]\r\n                    : formik.values.dob === record.dob) &&\r\n                  (record.hiredate && formik.values.hiredate\r\n                    ? record.hiredate.split(\"T\")[0] ===\r\n                      formik.values.hiredate.split(\"T\")[0]\r\n                    : formik.values.hiredate === record.hiredate)) ||\r\n                // formik.values.hiredate === record.hiredate) ||\r\n                formik.values.fname === \"\" ||\r\n                formik.values.lname === \"\" ||\r\n                formik.values.gender === \"\" ||\r\n                formik.values.dob === \"\" ||\r\n                formik.values.hiredate === \"\"\r\n                  ? true\r\n                  : false\r\n              }\r\n              style={\r\n                !formik.isValid ||\r\n                (formik.values.fname === \"\" && formik.values.lname === \"\")\r\n                  ? { cursor: \"not-allowed\" }\r\n                  : {}\r\n              }\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditBox;\r\n","import React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\n// import { useHistory } from \"react-router-dom\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport \"./MainPage.css\";\nimport errorImage from \"./404.jpg\";\nimport CreatePostTest_2 from \"./CreatePostTest_2\";\nimport Pagination from \"./Pagination\";\nimport EditBox from \"./EditBox\";\n// import Button from \"@restart/ui/esm/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import { Button } from \"react-bootstrap\";\nimport { Upload, Button, Input } from \"antd\";\n\nconst { Search } = Input;\n\nfunction MainPage() {\n  const [postList, setPostList] = useState([]);\n  const [errorMsg, setErrorMsg] = useState([]);\n  const isOpen = useState();\n  var closeSpan = false;\n\n  // let history = useHistory();\n\n  function viewRecord() {\n    Axios.get(\"http://localhost:3002/api/get\").then((data) => {\n      if (data.data === \"ERROR\") {\n        setErrorMsg(\"404\");\n      } else {\n        setPostList(data.data);\n      }\n    });\n  }\n  useEffect(() => {\n    viewRecord();\n  }, []);\n\n  function viewObject(id) {\n    Axios.post(\"http://localhost:3002/api/delete\", {\n      empid: id,\n    }).then((data) => {\n      if (data.data === \"ERROR\") {\n        setErrorMsg(\"404\");\n      } else {\n        viewRecord();\n      }\n    });\n  }\n\n  const [editRecordData, setEditRecordData] = useState([]);\n  function viewIndividualRecord(id) {\n    Axios.post(\"http://localhost:3002/api/getFromId\", {\n      id: id,\n    }).then((data) => {\n      if (data.data === \"ERROR\") {\n        setErrorMsg(\"404\");\n      } else {\n        setEditRecordData(data.data[0]);\n        // setLoading(false);\n      }\n    });\n  }\n  // console.log(editRecordData);\n  const [loading, setLoading] = useState(false);\n\n  const editRecord = (id) => {\n    setLoading(true);\n    let ele = document.getElementById(\"editModal\");\n    ele.style.display = \"block\";\n    viewIndividualRecord(id);\n  };\n\n  const closeEditRecord = () => {\n    let ele = document.getElementById(\"editModal\");\n    ele.style.display = \"none\";\n    setLoading(false);\n    setEditRecordData(\"\");\n    viewRecord();\n  };\n\n  for (var i = 0; i < postList.length; i++) {\n    // let check = document.getElementById(postList[i].empid);\n    // console.log(postList[i].empid);\n    // console.log(check);\n    isOpen[`${postList[i].empid}`] = false;\n  }\n  // console.log(isOpen);\n  function toggle(id) {\n    let check = document.getElementById(id);\n    // console.log(check.style);\n    let currentValue = check.style.getPropertyValue(\"display\");\n    // console.log(typeof currentValue);\n    if (currentValue === \"none\") check.style.setProperty(\"display\", \"block\");\n    else check.style.setProperty(\"display\", \"none\");\n  }\n  // const items = [];\n  // postList.map((val_1, key_1) => {\n  //   items.push({ id: key_1, value: val_1.fname });\n  // });\n  const [searchItem, setSearchItem] = useState(\"\");\n  function onChange(e) {\n    // console.log(e.target.value.toLowerCase());\n    setSearchItem(e.target.value);\n    // console.log(searchItem);\n  }\n\n  const [CreatePostButton, setCreatePostButton] = useState(false);\n\n  function changeButton() {\n    if (CreatePostButton) {\n      // onClick this needs to be Closed\n      let button_1 = document.getElementById(\"routeCreatePostButton\");\n      button_1.innerHTML = \"New Entry\";\n    }\n    closeSpan = true;\n    setCreatePostButton(!CreatePostButton);\n    viewRecord();\n  }\n  if (CreatePostButton) {\n    let button_1 = document.getElementById(\"routeCreatePostButton\");\n    button_1.innerHTML = \"Close\";\n  }\n  // window.onload = function () {\n  //   if (!CreatePostButton) {\n  //     let button_1 = document.getElementById(\"routeCreatePostButton\");\n  //     button_1.innerHTML = \"New Entry\";\n  //   }\n  // };\n\n  const enlargeImage = function (e) {\n    // console.log(e.target.id);\n    let toEnable = document.getElementById(\"myModal\");\n\n    var modalImg = document.getElementById(\"img01\");\n    var captionText = document.getElementById(\"caption\");\n\n    toEnable.style.display = \"block\";\n    modalImg.src = e.target.src;\n    modalImg.alt = e.target.id.slice(1);\n    captionText.innerHTML = e.target.alt;\n  };\n\n  const [profileImage, setProfileImage] = useState(false);\n  const [imageMsg, setImageMsg] = useState(\"\");\n  const [imagePathDB, setImagePathDB] = useState(\"\");\n  const [imageEmpIDDB, setImageEmpIDDB] = useState(\"\");\n\n  // When the user clicks on <span> (x), close the modal\n  const closeEnlarge = function () {\n    let toEnable = document.getElementById(\"myModal\");\n    toEnable.style.display = \"none\";\n    setImageMsg(\"\");\n    setProfileImage(false);\n    viewRecord();\n\n    let toDisable = document.getElementById(\"myModelArticleCenterInput\");\n    let toDisable_1 = document.getElementById(\"myModelArticleCenterUpload\");\n    // console.log(toDisable.value);\n    toDisable.value = \"\";\n    toDisable.style.display = \"none\";\n    toDisable_1.style.display = \"none\";\n  };\n\n  const uploadPhoto = (e) => {\n    const formData = new FormData();\n    formData.append(\"myImage\", e.target.files[0]);\n\n    const url = \"http://localhost:3002/api/image\";\n    Axios.post(url, formData).then((data) => {\n      if (data.data === \"ERROR\") {\n        console.log(data);\n        setErrorMsg(\"404\");\n      } else {\n        var path = data.data.path.split(\"\\\\\");\n        var path_print = `/` + path[1] + `/` + path[2];\n\n        var modalImg = document.getElementById(\"img01\");\n        modalImg.src = process.env.PUBLIC_URL + path_print;\n        console.log(modalImg.alt);\n        setImagePathDB(path_print);\n        setProfileImage(true);\n      }\n    });\n  };\n\n  const uploadCnf = function () {\n    if (profileImage) {\n      Axios.post(\"http://localhost:3002/api/updateImage\", {\n        empid: imageEmpIDDB,\n        picturepath: imagePathDB,\n      }).then((data) => {\n        // handleSubmitUtil();\n        // alert(data.data);\n        console.log(data);\n        if (data.data === \"ERROR\") {\n          setErrorMsg(\"404\");\n        } else {\n          // alert(\"Record Updated Successfully\");\n          let toDisable = document.getElementById(\"myModelArticleCenterInput\");\n          let toDisable_1 = document.getElementById(\n            \"myModelArticleCenterUpload\"\n          );\n          toDisable.style.display = \"none\";\n          toDisable_1.style.display = \"none\";\n          setImagePathDB();\n          setImageMsg(\"Image Updated\");\n        }\n      });\n    }\n  };\n\n  const updatePic = function (e) {\n    var modalImg = document.getElementById(\"img01\");\n    let toEnable = document.getElementById(\"myModelArticleCenterInput\");\n    let toEnable_1 = document.getElementById(\"myModelArticleCenterUpload\");\n\n    toEnable.style.display = \"block\";\n    toEnable_1.style.display = \"block\";\n\n    // console.log(toEnable);\n    console.log(modalImg.alt);\n    setImageEmpIDDB(modalImg.alt);\n  };\n\n  // Pagination\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(4);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = postList.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div className=\"MainPage\">\n      <div\n        className=\"mainPageRoute\"\n        style={{ display: \"block\", margin: \"5px\", minHeight: \"42px\" }}\n      >\n        <Button\n          // className=\"button-15\"\n          // varient=\"primary\"\n          type=\"primary\"\n          onClick={() => {\n            changeButton();\n          }}\n          // style={{ border: \"none\", cursor: \"pointer\" }}\n        >\n          <span id=\"routeCreatePostButton\">New Entry</span>\n        </Button>\n        <div\n          className=\"searchBoxInput\"\n          style={{\n            // border: \"1px solid black\",\n            // borderRadius: \"20px\",\n            // padding: \"10px\",\n            // width: \"130px\",\n            // height: \"20px\",\n            float: \"right\",\n          }}\n        >\n          <Search\n            type=\"text\"\n            placeholder=\"Search in page by name & email . . .\"\n            // onSearch={(e) => {\n            //   onChange(e);\n            // }}\n            onChange={(e) => {\n              onChange(e);\n            }}\n            style={{\n              // border: \"0.5px solid black\",\n              width: \"25vw\",\n              // height: \"40px\",\n              float: \"left\",\n              fontSize: \"18px\",\n            }}\n          />\n          {/* <input\n            type=\"text\"\n            placeholder=\"Search in page by name & email . . .\"\n            style={{\n              border: \"1px solid black\",\n              borderRadius: \"20px\",\n              padding: \"10px\",\n              width: \"25vw\",\n              height: \"40px\",\n              float: \"left\",\n              fontSize: \"18px\",\n              // height: \"25px\",\n            }}\n            onChange={(e) => {\n              onChange(e);\n              // if (e.target.value) setCreatePostButton(false);\n            }}\n          /> */}\n        </div>\n        <div\n          // id=\"createPostDiv\"\n          className=\"modal\"\n          style={\n            !CreatePostButton\n              ? { display: \"none\" }\n              : { display: \"block\", zIndex: 999 }\n          }\n        >\n          <span className=\"close\" onClick={changeButton}>\n            &times;\n          </span>\n          <div className=\"myModalDisplay\">\n            <CreatePostTest_2 closeSpan={closeSpan} />\n          </div>\n        </div>\n      </div>\n      <div id=\"myModal\" className=\"modal\">\n        <span className=\"close\" onClick={closeEnlarge}>\n          &times;\n        </span>\n        <div className=\"myModalDisplay\">\n          <div className=\"myModalSection\">\n            <div className=\"myModelSectionCenter\">\n              <img className=\"modal-img\" alt=\"\" id=\"img01\"></img>\n              <div id=\"caption\"></div>\n            </div>\n          </div>\n          <div className=\"myModalArticle\">\n            <div className=\"myModelArticleCenter\">\n              <Button type=\"primary\" onClick={() => updatePic()}>\n                Update\n              </Button>\n              {/* <Upload id=\"myModelArticleCenterInput\">\n                <Button icon={<UploadOutlined />}>Upload</Button>\n              </Upload> */}\n\n              <input\n                id=\"myModelArticleCenterInput\"\n                type=\"file\"\n                onChange={(e) => uploadPhoto(e)}\n                style={{\n                  width: \"200px\",\n                  color: \"white\",\n                }}\n                icon={<UploadOutlined />}\n              />\n              <Button\n                type=\"primary\"\n                id=\"myModelArticleCenterUpload\"\n                onClick={uploadCnf}\n              >\n                Upload\n              </Button>\n              {profileImage ? (\n                <div\n                  style={{\n                    color: \"green\",\n                    // backgroundColor: \"green\",\n                    padding: \"5px\",\n                    width: \"115px\",\n                    fontWeight: \"600\",\n                    fontSize: \"800\",\n                  }}\n                >\n                  {imageMsg}\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal\" id=\"editModal\" style={{ zIndex: 999 }}>\n        {loading ? (\n          <div>\n            <span className=\"close\" onClick={closeEditRecord}>\n              &times;\n            </span>\n            <div className=\"myModalDisplay\">\n              <EditBox record={editRecordData} loading={loading} />\n            </div>\n          </div>\n        ) : (\n          <h2>Loading...</h2>\n        )}\n      </div>\n      <div className=\"EmpContainer\">\n        {currentPosts\n          .filter((val, key) => {\n            if (searchItem === \"\" || !searchItem) {\n              return val;\n            } else if (\n              currentPosts[key].fname\n                .toLowerCase()\n                .includes(searchItem.toLowerCase()) ||\n              currentPosts[key].lname\n                .toLowerCase()\n                .includes(searchItem.toLowerCase()) ||\n              currentPosts[key].email\n                .toLowerCase()\n                .includes(searchItem.toLowerCase())\n            ) {\n              return val;\n            } else {\n              return \"\";\n            }\n          })\n          .map((val, key) => {\n            return (\n              <div className=\"Emp\" key={key}>\n                <div className=\"EmpDisplay\">\n                  <div className=\"EmpContent\">\n                    <img\n                      alt={val.fname}\n                      id={`m${val.empid}`}\n                      src={\n                        val.picturepath && val.picturepath.length !== 0\n                          ? val.picturepath\n                          : \"https://www.w3schools.com/howto/img_avatar.png\"\n                      }\n                      style={{ cursor: \"pointer\" }}\n                      onClick={(e) => enlargeImage(e)}\n                    ></img>\n                    <div className=\"EmpContentDetails\">\n                      <span>\n                        {val.fname} {val.lname}\n                      </span>\n                      <span>{val.email}</span>\n                    </div>\n                  </div>\n                  <div className=\"EmpMenu\" tabIndex=\"-1\">\n                    {/* <DownOutlined\n                      onClick={() => {\n                        toggle(val.empid);\n                      }}\n                    /> */}\n                    <Button\n                      // variant=\"primary\"\n                      type=\"primary\"\n                      onClick={() => {\n                        toggle(val.empid);\n                      }}\n                      style={{\n                        width: \"100px\",\n                      }}\n                    >\n                      View\n                    </Button>\n                    <Button\n                      // variant=\"warning\"\n                      type=\"primary\"\n                      // style={{ background: \"#ffc107\", borderColor: \"#ffc107\" }}\n                      onClick={() => {\n                        editRecord(val.empid);\n                      }}\n                    >\n                      Edit\n                    </Button>\n                    <Button\n                      onClick={() => {\n                        if (\n                          window.confirm(\n                            \"Are you sure you want to delete this record?\"\n                          )\n                        )\n                          viewObject(val.empid);\n                      }}\n                      // className=\"button-15\"\n                      // variant=\"danger\"\n                      type=\"primary\"\n                      danger\n                    >\n                      Delete\n                    </Button>\n                    {/* <div className=\"three-dots\"></div> */}\n                  </div>\n                </div>\n                <div\n                  className=\"EmpHide\"\n                  id={val.empid}\n                  style={{ display: \"none\" }}\n                >\n                  <div className=\"dropdown\">\n                    <div className=\"dropdown_section\">\n                      <div className=\"EmpIndividualContent\">\n                        <p>Employee Id : {val.empid}</p>\n                        <p>\n                          Date Of Birth: {val.dob.slice(8, 10)}/\n                          {val.dob.slice(5, 7)}/{val.dob.slice(0, 4)}\n                        </p>\n                        <p>\n                          Gender:{\" \"}\n                          {val.gender === \"M\"\n                            ? \"Male\"\n                            : val.gender === \"F\"\n                            ? \"Female\"\n                            : val.gender === \"O\"\n                            ? \"Others\"\n                            : \"Not Available\"}\n                        </p>\n                        <p>\n                          Hire Date: {val.hiredate.slice(8, 10)}/\n                          {val.hiredate.slice(5, 7)}/{val.hiredate.slice(0, 4)}\n                        </p>\n                      </div>\n                    </div>\n                    {/* <div className=\"dropdown_article\">\n                      <div className=\"dropdown_article_center\">\n                        <Button\n                          variant=\"warning\"\n                          onClick={() => {\n                            editRecord(val.empid);\n                          }}\n                        >\n                          Edit\n                        </Button>\n\n                        <Button\n                          onClick={() => {\n                            if (\n                              window.confirm(\n                                \"Are you sure you want to delete this record?\"\n                              )\n                            )\n                              viewObject(val.empid);\n                          }}\n                          \n                          variant=\"danger\"\n                        >\n                          Delete\n                        </Button>\n                      </div>\n                    </div> */}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n      <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={postList.length}\n        paginate={paginate}\n      />\n\n      <div\n        className=\"EmpContainerError\"\n        style={errorMsg !== \"404\" ? { display: \"none\" } : { display: \"block\" }}\n      >\n        {errorMsg === \"404\" ? (\n          <div className=\"Error\">\n            <img\n              className=\"ErrorImage\"\n              alt=\"404 Page Not Found\"\n              src={errorImage}\n            />\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default MainPage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"./navBar.css\";\nimport MainPage from \"./pages/MainPage\";\n// import CreatePost from \"./pages/CreatePost\";\n// import Post from \"./pages/Post\";\n\nconst App = () => {\n  return (\n    <div>\n      <div className=\"navbar\">\n        {/* <div className=\"links\">\n          <input type=\"checkbox\" id=\"ham-menu\"></input>\n          <label htmlFor=\"ham-menu\">\n            <div className=\"hide-des\">\n              <span className=\"menu-line\"></span>\n              <span className=\"menu-line\"></span>\n              <span className=\"menu-line\"></span>\n              <span className=\"menu-line\"></span>\n              <span className=\"menu-line\"></span>\n              <span className=\"menu-line\"></span>\n            </div>\n          </label>\n\n          <div className=\"ham-menu\">\n            <ul className=\"centre-text links\">\n              <a href=\"/\">Employees</a>\n              <a href=\"/createEmployee\">New Employee</a>\n            </ul>\n          </div>\n        </div> */}\n        <a className=\"header\" href=\"/\">\n          Employee Management System\n        </a>\n      </div>\n\n      <Router>\n        <Route path=\"/\" exact render={(props) => <MainPage />} />\n        {/* <Route path=\"/createEmployee\" render={(props) => <CreatePost />} /> */}\n        {/* <Route path=\"/EmpDetails/:empId\" render={(props) => <Post />} /> */}\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}